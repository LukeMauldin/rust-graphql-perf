
"""
Implement the DateTime<Utc> scalar

The input/output is a string in RFC3339 format.
"""
scalar DateTime

type EventInstance1 {
	title: String!
	description: String!
	fromDate: DateTime!
	toDate: DateTime!
	startTransitionMins: Int!
	endTransitionMins: Int!
	guestMinCount: Int
	guestMaxCount: Int
}

type EventInstance2 {
	title: String!
	description: String!
	fromDate: DateTime!
	toDate: DateTime!
	startTransitionMins: Int!
	endTransitionMins: Int!
	guestMinCount: Int
	guestMaxCount: Int
}

type EventInstance3 {
	title: String!
	description: String!
	fromDate: DateTime!
	toDate: DateTime!
	startTransitionMins: Int!
	endTransitionMins: Int!
	guestMinCount: Int
	guestMaxCount: Int
}

input EventInstanceCreateInput1 {
	title: String!
	description: String!
	fromDate: DateTime!
	toDate: DateTime!
	startTransitionMins: Int!
	endTransitionMins: Int!
	guestMinCount: Int
	guestMaxCount: Int
}

input EventInstanceCreateInput2 {
	title: String!
	description: String!
	fromDate: DateTime!
	toDate: DateTime!
	startTransitionMins: Int!
	endTransitionMins: Int!
	guestMinCount: Int
	guestMaxCount: Int
}

input EventInstanceCreateInput3 {
	title: String!
	description: String!
	fromDate: DateTime!
	toDate: DateTime!
	startTransitionMins: Int!
	endTransitionMins: Int!
	guestMinCount: Int
	guestMaxCount: Int
}




type Mutation {
	create1(input: EventInstanceCreateInput1!): EventInstance1!
	create2(input: EventInstanceCreateInput2!): EventInstance2!
	create3(input: EventInstanceCreateInput3!): EventInstance3!
}

type Query {
	eventInstances1: [EventInstance1!]!
	eventInstances2: [EventInstance2!]!
	eventInstances3: [EventInstance3!]!
}


schema {
	query: Query
	mutation: Mutation
}
